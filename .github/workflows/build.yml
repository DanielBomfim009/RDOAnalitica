name: Build Android APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*','**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Decode keystore (if provided)
        if: ${{ secrets.KEYSTORE_B64 != '' }}
        run: |
          mkdir -p app/keystore
          echo "${{ secrets.KEYSTORE_B64 }}" | base64 -d > app/keystore/release.keystore
          ls -la app/keystore || true

      - name: Print versions (debug)
        run: |
          java -version
          ./gradlew --version

      - name: Build Debug APK
        run: |
          ./gradlew assembleDebug --no-daemon --stacktrace

      - name: Build Release APK (signed) if keystore present
        if: ${{ secrets.KEYSTORE_B64 != '' && secrets.KEYSTORE_PASSWORD != '' && secrets.KEY_ALIAS != '' && secrets.KEY_PASSWORD != '' }}
        env:
          STORE_PASS: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASS: ${{ secrets.KEY_PASSWORD }}
        run: |
          mkdir -p ~/.gradle
          cat > ~/.gradle/gradle.properties <<EOF
          STORE_FILE=app/keystore/release.keystore
          STORE_PASSWORD=${STORE_PASS}
          KEY_ALIAS=${KEY_ALIAS}
          KEY_PASSWORD=${KEY_PASS}
          EOF

          ./gradlew assembleRelease --no-daemon --stacktrace

      - name: Upload APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rdo-apks
          path: |
            app/build/outputs/apk/debug/*.apk
            app/build/outputs/apk/release/*.apk
